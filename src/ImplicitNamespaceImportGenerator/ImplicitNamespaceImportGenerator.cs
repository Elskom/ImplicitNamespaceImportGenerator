global using System;
global using System.IO;
global using System.Linq;
global using System.Text;
global using Microsoft.CodeAnalysis;
global using Microsoft.CodeAnalysis.Text;

namespace ImplicitNamespaceImportGenerator;

/// <summary>
/// Source Generator for generating the implicit global namespace imports.
/// </summary>
[Generator]
public class ImplicitNamespaceImportGenerator : ISourceGenerator
{
    /// <inheritdoc/>
    public void Initialize(GeneratorInitializationContext context)
    {
        // Source Generators do not need to fill this in.
    }

    /// <inheritdoc/>
    public void Execute(GeneratorExecutionContext context)
    {
        var importsAdditionalText = context.AdditionalFiles.FirstOrDefault(
            af => string.Equals(
                Path.GetFileName(af.Path),
                "Imports.txt",
                StringComparison.OrdinalIgnoreCase));
        if (importsAdditionalText is null)
        {
            return;
        }

        var contents = importsAdditionalText.GetText().ToString();

        // filter out duplicate namespace imports.
        var lines = contents.Split(new []{ "\r\n", "\n", "\r"}, StringSplitOptions.RemoveEmptyEntries);
        var builder = new StringBuilder();
        if (lines != Array.Empty<string>())
        {
            _ = builder.AppendLine("// <autogenerated>");
        }

        foreach (var line in lines.Distinct())
        {
            _ = builder.AppendLine((line.StartsWith("static "), line.Contains("=")) switch
            {
                (true, false) => $"global using {line.Insert(line.IndexOf("static ", StringComparison.Ordinal) + 7, "global::")};",
                (false, true) => $"global using {line.Insert(line.IndexOf("=", StringComparison.Ordinal) + 2, "global::")};",
                (false, false) => $"global using global::{line};",
                (true, true) => throw new InvalidOperationException("static aliases are not supported in the C# or Visual Basic Compilers."),
            });
        }

        context.AddSource(
            "GlobalUsings.g.cs",
            SourceText.From(builder.ToString(), Encoding.UTF8));
    }
}
